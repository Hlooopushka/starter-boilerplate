{"version":3,"sources":["redux/actions/User.js","views/app-views/userEdit/index.js"],"names":["putUserData","user","type","PUT_USER_DATA","payload","showLoading","SHOW_LOADING","clearUserData","CLEAR_USER_DATA","initialValues","connect","useState","userData","setUserData","data","useSelector","state","loading","form","useRef","history","useHistory","useEffect","current","setFieldsValue","Loading","ref","name","labelCol","span","wrapperCol","autoComplete","style","width","marginTop","marginLeft","Item","label","borderColor","opacity","placeholder","username","email","phone","company","offset","htmlType","onClick","values","setTimeout","push","APP_PREFIX_PATH"],"mappings":"mGAAA,mHAEaA,EAAc,SAACC,GACxB,MAAO,CACLC,KAAMC,IACNC,QAASH,IAIAI,EAAc,WACzB,MAAO,CACLH,KAAMI,MAGGC,EAAgB,WAC3B,MAAO,CACLL,KAAMM,O,+ICRNC,EAAgB,CAAC,KAAO,GAAI,SAAW,GAAI,MAAQ,GAAI,MAAQ,GAAI,QAAU,IA4HlEC,uBALO,SAAC,GAAc,IAAZT,EAAW,EAAXA,KAEvB,MAAO,CAAEM,cAD8BN,EAA/BM,cACgBF,YADeJ,EAAhBI,eAIe,CAAEE,kBAAeF,iBAA1CK,EA1HA,SAAC,GAAmC,IAAjCH,EAAgC,EAAhCA,cAAeF,EAAiB,EAAjBA,YAAiB,EAChBM,mBAAS,IADO,mBACzCC,EADyC,KAC/BC,EAD+B,KAE1CC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMf,QACnCgB,EAAWF,aAAY,SAACC,GAAD,OAAWA,EAAMf,QAAxCgB,QACDC,EAAOC,iBAAO,MACdC,EAAUC,cACpBC,qBAAU,WACPT,EAAYC,KAEX,CAACA,IAELQ,qBAAU,WACHL,GAAUC,EAAKK,QAAQC,eAAeZ,KAC3C,CAACA,IASH,OAAIK,EAAgB,cAACQ,EAAA,EAAD,IAGhB,gCACA,+HACA,eAAC,IAAD,CACEC,IAAKR,EACLS,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGRE,aAAa,MACbC,MAAO,CACLC,MAAO,QACPC,UAAU,QACVC,WAAW,SAEb1B,cAAeA,EAhBjB,UAkBA,cAAC,IAAK2B,KAAN,CACEC,MAAM,qBACNV,KAAK,OAFP,SAIA,cAAC,IAAD,CAAOK,MAAO,CACVM,YAAY,UACZC,QAAQ,WAIV,cAAC,IAAKH,KAAN,CACAC,MAAM,6CACNV,KAAK,WAFL,SAIF,cAAC,IAAD,CAAOK,MAAO,CACVM,YAAY,UACZC,QAAQ,OAEZC,YAAa5B,EAAS6B,aAEpB,cAAC,IAAKL,KAAN,CACAC,MAAM,QACNV,KAAK,QAFL,SAIF,cAAC,IAAD,CAAOK,MAAO,CACVM,YAAY,UACZC,QAAQ,OAEZC,YAAa5B,EAAS8B,UAEpB,cAAC,IAAKN,KAAN,CACAC,MAAM,6CACNV,KAAK,QAFL,SAIF,cAAC,IAAD,CAAOK,MAAO,CACVM,YAAY,UACZC,QAAQ,OAEZC,YAAa5B,EAAS+B,UAEpB,cAAC,IAAKP,KAAN,CACAC,MAAM,mDACNV,KAAK,UAFL,SAIF,cAAC,IAAD,CAAOK,MAAO,CACVM,YAAY,UACZC,QAAQ,OAEZC,YAAa5B,EAASgC,YAEtB,eAAC,IAAKR,KAAN,CACIN,WAAY,CACVe,OAAQ,EACRhB,KAAM,IAHZ,UAMA,cAAC,IAAD,CAAQ3B,KAAK,UAAU4C,SAAS,SAASC,QAtF1B,SAACC,GAChB3C,IACC4C,YAAW,WACT1C,IACDa,EAAQ8B,KAAR,UAAgBC,IAAhB,oBAAkD,MAkFpD,oEAGA,cAAC,IAAD,CAAQjD,KAAK,UAAU4C,SAAS,QAC5Bd,MAAO,CACHG,WAAW,QAFnB","file":"static/js/16.c9e9787f.chunk.js","sourcesContent":["import { PUT_USER_DATA, SHOW_LOADING, CLEAR_USER_DATA } from \"redux/constants/User\";\r\n\r\nexport const putUserData = (user) => {\r\n    return {\r\n      type: PUT_USER_DATA,\r\n      payload: user\r\n    }\r\n  };\r\n\r\n  export const showLoading = () => {\r\n    return {\r\n      type: SHOW_LOADING,\r\n    };\r\n  };\r\n  export const clearUserData = () => {\r\n    return {\r\n      type: CLEAR_USER_DATA\r\n    }\r\n  };\r\n\r\n  ","import { Button, Form, Input } from 'antd';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport {  clearUserData, showLoading } from 'redux/actions';\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst initialValues = {'name':'', 'username':'', 'email':'', 'phone':'', 'company':''}\r\n\r\nconst UserEdit = ({ clearUserData, showLoading}) => {\r\n    const [userData, setUserData] = useState({});\r\n    const data = useSelector((state) => state.user)\r\n    const {loading} = useSelector((state) => state.user)\r\n    const form = useRef(null)\r\n    const history = useHistory();\r\nuseEffect(()=>{   \r\n   setUserData(data);\r\n   }\r\n   ,[data])\r\n\r\nuseEffect(()=>{\r\n  if (!loading) {form.current.setFieldsValue(userData)}\r\n},[userData])\r\n\r\n  const onFinish = (values) => {\r\n    showLoading()\r\n     setTimeout(() => {\r\n       clearUserData();\r\n      history.push(`${APP_PREFIX_PATH}/clients-list`)}, 1000)\r\n  };\r\n\r\nif (loading) return <Loading/>\r\n\r\n  return (\r\n    <div> \r\n    <h1>Информация о себе:</h1>\r\n    <Form\r\n      ref={form}\r\n      name=\"basic\"\r\n      labelCol={{\r\n        span: 8,\r\n      }}\r\n      wrapperCol={{\r\n        span: 116,\r\n      }}\r\n      \r\n      autoComplete=\"off\"\r\n      style={{\r\n        width: '750px',\r\n        marginTop:'100px',\r\n        marginLeft:'100px'\r\n      }}\r\n      initialValues={initialValues}\r\n    >\r\n    <Form.Item\r\n      label=\"Имя\"\r\n      name=\"name\"\r\n      >\r\n    <Input style={{\r\n        borderColor:'#3E79F7',\r\n        opacity:'70%'\r\n    }} \r\n    />\r\n      </Form.Item>\r\n      <Form.Item\r\n      label=\"Фамилия\"\r\n      name=\"username\"\r\n      >\r\n    <Input style={{\r\n        borderColor:'#3E79F7',\r\n        opacity:'70%'\r\n    }} \r\n    placeholder={userData.username}/>\r\n      </Form.Item>\r\n      <Form.Item\r\n      label=\"email\"\r\n      name=\"email\"\r\n      >\r\n    <Input style={{\r\n        borderColor:'#3E79F7',\r\n        opacity:'70%'\r\n    }}\r\n    placeholder={userData.email}/>\r\n      </Form.Item>\r\n      <Form.Item\r\n      label=\"Телефон\"\r\n      name=\"phone\"\r\n      >\r\n    <Input style={{\r\n        borderColor:'#3E79F7',\r\n        opacity:'70%'\r\n    }} \r\n    placeholder={userData.phone}/>\r\n      </Form.Item>\r\n      <Form.Item\r\n      label=\"Компания\"\r\n      name=\"company\"\r\n      >\r\n    <Input style={{\r\n        borderColor:'#3E79F7',\r\n        opacity:'70%'\r\n    }}\r\n    placeholder={userData.company}/>\r\n      </Form.Item>\r\n    <Form.Item\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n    <Button type=\"primary\" htmlType=\"submit\" onClick={onFinish}>\r\n          Сохранить\r\n    </Button>\r\n    <Button type=\"primary\" htmlType=\"reset\"\r\n        style={{\r\n            marginLeft:'50px'\r\n        }}\r\n        >\r\n          Отменить\r\n    </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ user }) => {\r\n    const { clearUserData, showLoading} =  user;\r\n    return { clearUserData, showLoading}\r\n  };\r\n  \r\n  export default connect(mapStateToProps, { clearUserData, showLoading})(UserEdit);\r\n  \r\n\r\n"],"sourceRoot":""}